// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id        String      @id @default(cuid())
  name      String
  avatar    String @default("avatar")
  email     String @unique
  password  String
  joinDate  DateTime @default(now())
  role      String @default("user")
  session   session?
  pesantren pesantren[]
  comment   comment[]
  rating    rating[]
}

model session {
  id     String @id @default(cuid())
  userID String @unique
  User   user   @relation(fields: [userID], references: [id])
}

model pesantren {
  id           String    @id @default(cuid())
  name         String
  profil       String
  type         String
  methode      String
  facility     String
  address      String
  village      String
  district     String
  siteLink     String
  mapLink      String
  contactEmail String
  contactPhone String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime
  userID       String
  user         user      @relation(fields: [userID], references: [id])
  socmed       socmed?
  pic          pic[]
  comment      comment[]
  rating       rating[]
}

model pic {
  id          String    @id @default(cuid())
  pic         String
  pesantrenID String
  pesantren   pesantren @relation(fields: [pesantrenID], references: [id])
}

model socmed {
  id          String    @id @default(cuid())
  instagram   String
  facebook    String
  twitter     String
  tiktok      String
  youtube     String
  pesantrenID String    @unique
  pesantren   pesantren @relation(fields: [pesantrenID], references: [id])
}

model comment {
  id          String    @id @default(cuid())
  content     String
  createdAt   DateTime  @default(now())
  userID      String
  user        user      @relation(fields: [userID], references: [id])
  pesantrenID String
  pesantren   pesantren @relation(fields: [pesantrenID], references: [id])
}

model rating {
  id          String    @id @default(cuid())
  value       Int
  createdAt   DateTime  @default(now())
  userID      String
  user        user      @relation(fields: [userID], references: [id])
  pesantrenID String
  pesantren   pesantren @relation(fields: [pesantrenID], references: [id])
}
